<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SakuraBridge.Library</name>
    </assembly>
    <members>
        <member name="T:SakuraBridge.Library.BadRequestException">
            <summary>
            リクエスト文字列のパース時にエラーが発生した
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.Message">
            <summary>
            SHIORI/SAORI/PLUGIN/SSTPのリクエストやレスポンスを表すクラス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Message.Item(System.String)">
            <summary>
            指定した名前のヘッダ値を取得/設定 (取得時、指定した名前のヘッダが存在しない場合はnull)
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.Contains(System.String)">
            <summary>
            指定した名前の値をヘッダに含んでいるかどうかを判定
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.Remove(System.String)">
            <summary>
            指定した名前の値をヘッダから削除
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Message.References">
            <summary>
            Reference0, 1, 2... のリストを取得/設定
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.GetSequentialHeaderValues(System.String)">
            <summary>
            Reference0, 1, 2... やArgument0, 1, 2... など、連番方式のヘッダ値をListとして取得
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.SetSequentialHeaderValues(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Reference0, 1, 2... やArgument0, 1, 2... など、連番方式のヘッダ値を設定する。既存の設定値はクリアされる
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Message.HeaderNames">
            <summary>
            ヘッダ名のコレクションを取得
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Message.Charset">
            <summary>
            Charsetヘッダ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Message.Encoding">
            <summary>
            エンコーディング (Charsetで指定された内容と連動)
            取得時、Charsetが未指定の場合や、解釈できない値の場合はnullを返す;
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.FindEncodingByCharset(System.String)">
            <summary>
            Charsetとして指定された値から、対応するEncodingを探す。
            エンコーディングが見つからない場合、未サポート時はnullを返す
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.ConvertEncoding2Charset(System.Text.Encoding)">
            <summary>
            EncodingからCharsetで使用可能な名前を取得 (一般的でないCharsetの場合はWebNameを返す)
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.Response">
            <summary>
            SHIORI/SAORI/PLUGINレスポンスの基底クラス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.Status">
            <summary>
            ステータス文字列 (例: "PLUGIN/2.0 200 OK") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.Version">
            <summary>
            ステータス行に出力するバージョン (例: "PLUGIN/2.0") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.StatusCode">
            <summary>
            ステータスコード (例: 200) 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.StatusExplanation">
            <summary>
            ステータス説明句 (例: "OK") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.Success">
            <summary>
            リクエストが成功したかどうか。200番台のステータスコードの場合true
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.IsClientError">
            <summary>
            クライアントエラーかどうか。400番台のステータスコードの場合true
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.IsServerError">
            <summary>
            サーバーエラーかどうか。500番台のステータスコードの場合true
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Response.#ctor(System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="statusCode">ステータスコード。ここで指定した値に応じて、ステータス説明文も自動設定される</param>
        </member>
        <member name="M:SakuraBridge.Library.Response.ToString">
            <summary>
            文字列化
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.CommonStatusCode">
            <summary>
            レスポンスで使用する一般的なステータスを表す定数クラス
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.OK">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.NoContent">
            <summary>
            正常/結果なし
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.BadRequest">
            <summary>
            不正なリクエスト
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.NotImplemented">
            <summary>
            サーバが未実装
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.ServiceUnavailable">
            <summary>
            サーバがリクエストを受け付けられない状態
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.ExplanationMap">
            <summary>
            ステータス説明文
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.PluginModule">
            <summary>
            プラグインモジュール (主に継承して使用する)
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.PluginModule.DLLDirPath">
            <summary>
            DLLが置かれているディレクトリのパス。Load時にセットされる
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.Load(System.String)">
            <summary>
            Load処理
            </summary>
            <param name="dllDirPath">DLLが置かれているパス</param>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.Request(System.String)">
            <summary>
            リクエスト
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.Unload">
            <summary>
            Unload処理
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.Version">
            <summary>
            バージョン文字列 (オーバーライドしない場合はアセンブリ名とアセンブリのバージョンから自動生成される)
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.OnMenuExec(SakuraBridge.Library.PluginRequest)">
            <summary>
            メニューからのプラグイン選択時に呼び出される処理
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.Encoding">
            <summary>
            リクエスト/レスポンス時に使用するエンコーディング
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.PluginResponse">
            <summary>
            PLUGIN/2.0 レスポンス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginResponse.Version">
            <summary>
            バージョン
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginResponse.#ctor(System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="statusCode">ステータスコード。ここで指定した値に応じて、ステータス説明文も自動設定される</param>
        </member>
        <member name="P:SakuraBridge.Library.PluginResponse.Event">
            <summary>
            Eventヘッダ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginResponse.Script">
            <summary>
            Scriptヘッダ
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginRequest.Parse(System.String)">
            <summary>
            リクエスト文字列をパースする
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginRequest.IsNotify">
            <summary>
            NOTIFYリクエストフラグ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginRequest.Command">
            <summary>
            コマンド文字列
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginRequest.ID">
            <summary>
            IDヘッダ
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.Request">
            <summary>
            SHIORI/SAORI/PLUGINリクエストの基底クラス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Request.Command">
            <summary>
            コマンド文字列 (例: "GET PLUGIN/2.0") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Request.Sender">
            <summary>
            Senderヘッダ
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Request.ToString">
            <summary>
            文字列化
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Request.Parse``1(System.String,System.String,System.Func{System.String,System.Boolean},System.Action{System.String,``0})">
            <summary>
            リクエスト文字列をパースする
            </summary>
            <param name="message">パース対象のリクエスト文字列</param>
            <param name="versionCaption">パース対象のリクエストバージョン表記。例外発生時に表示される</param>
            <param name="CommandCheckFunc">コマンド行が正しいかどうかを判定する関数</param>
            <param name="RequestSetupFunc">リクエストに必要な初期値をセットする関数。ヘッダのセット後に、コマンド行、リクエストを引数として呼ばれる</param>
        </member>
        <member name="T:SakuraBridge.Library.SSTPRequest">
            <summary>
            SSTPリクエスト
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.SendSSTP14Request">
            <summary>
            SEND SSTP/1.4 リクエスト
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SendSSTP14Request.Command">
            <summary>
            コマンド文字列
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.SSTPResponse">
            <summary>
            SSTPレスポンス
            </summary>
            <remarks>SHIORI/SAORI/PLUGINのレスポンスとはフォーマットが異なるため、Responseクラスを継承していないことに注意してください。</remarks>
        </member>
        <member name="M:SakuraBridge.Library.SSTPResponse.Parse(System.String)">
            <summary>
            レスポンス文字列をパースする
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.Status">
            <summary>
            ステータス文字列 (例: "PLUGIN/2.0 200 OK") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.Version">
            <summary>
            ステータス行に出力するバージョン (例: "PLUGIN/2.0") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.StatusCode">
            <summary>
            ステータスコード (例: 200) 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.StatusExplanation">
            <summary>
            ステータス説明句 (例: "OK") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.AdditionalData">
            <summary>
            EXECUTE/1.3 リクエストなどで取得可能な追加情報。存在しない場合はnull
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.Success">
            <summary>
            リクエストが成功したかどうか。200番台のステータスコードの場合true
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.IsClientError">
            <summary>
            クライアントエラーかどうか。400番台のステータスコードの場合true
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.IsServerError">
            <summary>
            サーバーエラーかどうか。500番台のステータスコードの場合true
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SSTPResponse.#ctor">
            <summary>
            コンストラクタ
            </summary>
            <param name="statusCode">ステータスコード。ここで指定した値に応じて、ステータス説明文も自動設定される</param>
        </member>
        <member name="T:SakuraBridge.Library.SSTPClient">
            <summary>
            SSTP送信クライアント
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPClient.ToHost">
            <summary>
            送信先ホスト (初期値: 127.0.0.1)
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPClient.ToPort">
            <summary>
            送信先ポート (初期値: 9801)
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPClient.DebugLogging">
            <summary>
            リクエスト、レスポンスの内容などをDebug.WriteLineで出力するかどうか
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SSTPClient.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SSTPClient.SendRequest(SakuraBridge.Library.SSTPRequest)">
            <summary>
            SSTPリクエストを送信し、レスポンスを得る
            </summary>
            <param name="req">リクエストオブジェクト</param>
            <remarks>
            khskさんの作成されたソースを参考にしています。
            https://qiita.com/khsk/items/177741a6c573790a9379
            </remarks>
            <returns>成功した場合はResponseオブジェクト、失敗した場合はnull</returns>
        </member>
    </members>
</doc>
