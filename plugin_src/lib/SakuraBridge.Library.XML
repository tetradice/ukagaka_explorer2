<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SakuraBridge.Library</name>
    </assembly>
    <members>
        <member name="T:SakuraBridge.Library.BadRequestException">
            <summary>
            リクエスト文字列のパース時にエラーが発生した
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.BadRequestException.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.BadRequestException.#ctor(System.String)">
            <summary>
            コンストラクタ (メッセージを指定)
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.BadRequestException.#ctor(System.String,System.Exception)">
            <summary>
            コンストラクタ (内部例外を指定)
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.BadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            コンストラクタ (SerializationInfo, StreamingContextを指定)
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.Message">
            <summary>
            SHIORI/SAORI/PLUGIN/SSTPのリクエストやレスポンスを表すクラス
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.Message.HeaderPattern">
            <summary>
            ヘッダの正規表現文字列
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Message.Headers">
            <summary>
            ヘッダ値
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Message.Item(System.String)">
            <summary>
            指定した名前のヘッダ値を取得/設定
            </summary>
            <value>ヘッダの値。取得時、指定した名前のヘッダが存在しない場合はnull</value>
        </member>
        <member name="M:SakuraBridge.Library.Message.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.Contains(System.String)">
            <summary>
            指定した名前の値をヘッダに含んでいるかどうかを判定
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.Remove(System.String)">
            <summary>
            指定した名前の値をヘッダから削除
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.GetSequentialHeaderValues(System.String)">
            <summary>
            Reference0, 1, 2... やArgument0, 1, 2... など、連番方式のヘッダ値をListとして取得
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.SetSequentialHeaderValues(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Reference0, 1, 2... やArgument0, 1, 2... など、連番方式のヘッダ値を設定する。既存の設定値はクリアされる
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Message.HeaderNames">
            <summary>
            ヘッダ名のコレクションを取得
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Message.Charset">
            <summary>
            Charsetヘッダ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Message.Encoding">
            <summary>
            エンコーディング (Charsetで指定された内容と連動)
            取得時、Charsetが未指定の場合や、解釈できない値の場合はnullを返す;
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.FindEncodingByCharset(System.String)">
            <summary>
            Charsetとして指定された値から、対応するEncodingを探す。
            エンコーディングが見つからない場合、未サポート時はnullを返す
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Message.ConvertEncoding2Charset(System.Text.Encoding)">
            <summary>
            EncodingからCharsetで使用可能な名前を取得 (一般的でないCharsetの場合はWebNameを返す)
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.ModuleBase">
            <summary>
            モジュールの基底クラス
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.ModuleBase.InitializeLifetimeService">
            <inheritdoc />
        </member>
        <member name="M:SakuraBridge.Library.ModuleBase.Load(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SakuraBridge.Library.ModuleBase.Request(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SakuraBridge.Library.ModuleBase.Unload">
            <inheritdoc />
        </member>
        <member name="T:SakuraBridge.Library.Response">
            <summary>
            SHIORI/SAORI/PLUGINレスポンスの基底クラス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.Status">
            <summary>
            ステータス文字列 (例: "PLUGIN/2.0 200 OK") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.Version">
            <summary>
            ステータス行に出力するバージョン (例: "PLUGIN/2.0") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.StatusCode">
            <summary>
            ステータスコード (例: 200) 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.StatusExplanation">
            <summary>
            ステータス説明句 (例: "OK") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.Success">
            <summary>
            リクエストが成功したかどうか。200番台のステータスコードの場合true
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.IsClientError">
            <summary>
            クライアントエラーかどうか。400番台のステータスコードの場合true
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Response.IsServerError">
            <summary>
            サーバーエラーかどうか。500番台のステータスコードの場合true
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Response.#ctor(System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="statusCode">ステータスコード。ここで指定した値に応じて、ステータス説明文も自動設定される</param>
        </member>
        <member name="M:SakuraBridge.Library.Response.ToString">
            <inheritdoc />
        </member>
        <member name="T:SakuraBridge.Library.CommonStatusCode">
            <summary>
            レスポンスで使用する一般的なステータスを表す定数クラス
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.OK">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.NoContent">
            <summary>
            正常/結果なし
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.BadRequest">
            <summary>
            不正なリクエスト
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.NotImplemented">
            <summary>
            サーバが未実装
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.ServiceUnavailable">
            <summary>
            サーバがリクエストを受け付けられない状態
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.CommonStatusCode.ExplanationMap">
            <summary>
            ステータス説明文
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.DescriptText">
            <summary>
            descript.txt を表すクラス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.DescriptText.Path">
            <summary>
            descript.txt のフルパス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.DescriptText.Values">
            <summary>
            キーと値の組を格納したDictionary
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.DescriptText.LastWriteTime">
            <summary>
            ファイルの最終更新日時
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.DescriptText.Load(System.String)">
            <summary>
            指定したパスの descript.txt を読み込む
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.DescriptText.Load">
            <summary>
            descript.txt を読み込む
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.DescriptText.Get(System.String)">
            <summary>
            指定キーの値を取得。キーが存在しない場合はnullを返す
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.ShioriModule">
            <summary>
            SHIORIモジュールクラス
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.ShioriModule.DLLDirPath">
            <summary>
            DLLが置かれているディレクトリのパス。Load時にセットされる
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.ShioriModule.Load(System.String)">
            <summary>
            Load処理
            </summary>
            <param name="dllDirPath">DLLが置かれているパス</param>
        </member>
        <member name="M:SakuraBridge.Library.ShioriModule.Request(System.String)">
            <summary>
            リクエスト受信時の処理
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.ShioriModule.RequestMain(SakuraBridge.Library.ShioriRequest)">
            <summary>
            リクエスト受信時のメイン処理
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.ShioriModule.Unload">
            <summary>
            Unload処理
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.ShioriModule.Version">
            <summary>
            バージョン文字列 (オーバーライドしない場合はアセンブリ名とアセンブリのバージョンから自動生成される)
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.ShioriRequest">
            <summary>
            SHIORI/3.0 リクエスト
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.ShioriRequest.NotifyCommand">
            <summary>
            仕様で規定されたNOTIFYコマンド文字列
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.ShioriRequest.GetCommand">
            <summary>
            仕様で規定されたGETコマンド文字列
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.ShioriRequest.Parse(System.String)">
            <summary>
            リクエスト文字列をパースする
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.ShioriRequest.IsNotify">
            <summary>
            NOTIFYリクエストフラグ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.ShioriRequest.Command">
            <summary>
            コマンド文字列
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.ShioriRequest.ID">
            <summary>
            IDヘッダ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.ShioriRequest.References">
            <summary>
            Reference0, 1, 2... のリストを取得/設定
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.ShioriResponse">
            <summary>
            SHIORI/3.0 レスポンス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.ShioriResponse.Version">
            <summary>
            バージョン
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.ShioriResponse.#ctor(System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="statusCode">ステータスコード。ここで指定した値に応じて、ステータス説明文も自動設定される</param>
        </member>
        <member name="P:SakuraBridge.Library.ShioriResponse.Value">
            <summary>
            Valueヘッダ
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.ShioriResponse.OK">
            <summary>
            新しい 200 OK レスポンスを生成します。
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.ShioriResponse.NoContent">
            <summary>
            新しい 204 No Content レスポンスを生成します。
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.PluginModule">
            <summary>
            PLUGINモジュールクラス
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.PluginModule.DLLDirPath">
            <summary>
            DLLが置かれているディレクトリのパス。Load時にセットされる
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.PluginName">
            <summary>
            プラグイン名 (descript.txt 内のnameに書かれている名称)
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.InstalledPlugins">
            <summary>
            インストール済みプラグインの一覧（installedpluginイベントで通知された内容が格納される）
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.PluginModule.Plugin">
            <summary>
            プラグイン情報を表すクラス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.Plugin.Name">
            <summary>
            プラグイン名
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.Plugin.Id">
            <summary>
            プラグインID
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.GhostPathList">
            <summary>
            インストール済みゴーストフォルダパスの一覧（ghostpathlistイベントで通知された内容が格納される）
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.BalloonPathList">
            <summary>
            インストール済みバルーンフォルダパスの一覧（balloonpathlistイベントで通知された内容が格納される）
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.HeadlinePathList">
            <summary>
            インストール済みヘッドラインフォルダパスの一覧（headlinepathlistイベントで通知された内容が格納される）
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.PluginPathList">
            <summary>
            インストール済みプラグインフォルダパスの一覧（pluginpathlistイベントで通知された内容が格納される）
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.Load(System.String)">
            <summary>
            Load処理
            </summary>
            <param name="dllDirPath">DLLが置かれているパス</param>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.Request(System.String)">
            <summary>
            リクエスト受信時の処理
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.RequestMain(SakuraBridge.Library.PluginRequest)">
            <summary>
            リクエスト受信時のメイン処理
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.Unload">
            <summary>
            Unload処理
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.Version">
            <summary>
            バージョン文字列 (オーバーライドしない場合はアセンブリ名とアセンブリのバージョンから自動生成される)
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.OnSecondChange(SakuraBridge.Library.PluginRequest)">
            <summary>
            秒経過時に呼び出される処理
            </summary>
            <param name="req">受信したリクエスト</param>
            <remarks>何秒ごとに通知されるかは、descript.txtのsecondchangeinterval設定によって異なります。</remarks>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.OnGhostBoot(SakuraBridge.Library.PluginRequest,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            ゴースト起動時に呼び出される処理
            </summary>
            <param name="req">受信したリクエスト</param>
            <param name="hwnds">起動したゴーストの\0以降各キャラクターウィンドウのHWND [Reference0]</param>
            <param name="ghostName">起動したゴースト名 [Reference1]</param>
            <param name="currentShellName">起動したゴーストの現在のシェル名 [Reference2]</param>
            <param name="id">起動したゴーストのID (Owned SSTPで送られるものと同じ） [Reference3]</param>
            <param name="ghostPath">起動したゴーストのフルパス [Reference4]</param>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.OnGhostExit(SakuraBridge.Library.PluginRequest,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            ゴースト終了時に呼び出される処理 [NOTIFY]
            </summary>
            <param name="req">受信したリクエスト</param>
            <param name="hwnds">終了したゴーストの\0以降各キャラクターウィンドウのHWND [Reference0]</param>
            <param name="ghostName">終了したゴースト名 [Reference1]</param>
            <param name="currentShellName">終了したゴーストの現在のシェル名 [Reference2]</param>
            <param name="id">終了したゴーストのID (Owned SSTPで送られるものと同じ） [Reference3]</param>
            <param name="ghostPath">終了したゴーストのフルパス [Reference4]</param>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.OnGhostInfoUpdate(SakuraBridge.Library.PluginRequest,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            ゴーストの情報変更時に呼び出される処理 [NOTIFY]
            </summary>
            <param name="req">受信したリクエスト</param>
            <param name="hwnds">変更があったゴーストの\0以降各キャラクターウィンドウのHWND [Reference0]</param>
            <param name="ghostName">変更があったゴースト名 [Reference1]</param>
            <param name="currentShellName">変更があったゴーストの現在のシェル名 [Reference2]</param>
            <param name="id">変更があったゴーストのID (Owned SSTPで送られるものと同じ） [Reference3]</param>
            <param name="ghostPath">変更があったゴーストのフルパス [Reference4]</param>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.OnMenuExec(SakuraBridge.Library.PluginRequest,System.Collections.Generic.IList{System.String},System.String,System.String,System.String,System.String)">
            <summary>
            メニューからのプラグイン選択時に呼び出される処理
            </summary>
            <param name="req">受信したリクエスト</param>
            <param name="hwnds">プラグインを呼び出したゴーストの\0以降各キャラクターウィンドウのHWND [Reference0]</param>
            <param name="ghostName">プラグインを呼び出したゴースト名 [Reference1]</param>
            <param name="currentShellName">プラグインを呼び出したゴーストの現在のシェル名 [Reference2]</param>
            <param name="id">プラグインを呼び出したゴーストのID (Owned SSTPで送られるものと同じ） [Reference3]</param>
            <param name="ghostPath">プラグインを呼び出したゴーストのフルパス [Reference4]</param>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.OnInstallComplete(SakuraBridge.Library.PluginRequest,System.Collections.Generic.IList{SakuraBridge.Library.PluginModule.InstalledObject})">
            <summary>
            何かのインストール完了時に呼び出される処理
            </summary>
            <param name="req">受信したリクエスト</param>
            <param name="installedObjects">インストールされた対象物のリスト [Reference0-2]</param>
        </member>
        <member name="T:SakuraBridge.Library.PluginModule.InstalledObject">
            <summary>
            インストールされたもの
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.InstalledObject.Type">
            <summary>
            タイプ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.InstalledObject.Name">
            <summary>
            名前
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginModule.InstalledObject.Path">
            <summary>
            フルパス
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.OnChoiceSelect(SakuraBridge.Library.PluginRequest,System.String)">
            <summary>
            選択肢が選択された際に発生する処理
            </summary>
            <param name="req">受信したリクエスト</param>
            <param name="choiceId">選択肢ID [Reference0]</param>
            <remarks>
            プラグインがゴーストに送信したスクリプトおよび、プラグインがゴーストに通知したイベントに対してゴーストから返信されたスクリプトに、
            選択肢系のさくらスクリプトタグが含まれる場合に発生します。
            
            OnChoiceSelectExがNo Content以外を返した場合は、この処理は呼び出されません。
            </remarks>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.OnChoiceSelectEx(SakuraBridge.Library.PluginRequest,System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            選択肢が選択された際に発生する処理
            </summary>
            <param name="req">受信したリクエスト</param>
            <param name="choiceText">選択肢のテキスト（ラベル） [Reference0]</param>
            <param name="choiceId">選択肢ID [Reference1]</param>
            <param name="additionalValues">拡張情報 [Reference2-]</param>
            <remarks>
            プラグインがゴーストに送信したスクリプトおよび、プラグインがゴーストに通知したイベントに対してゴーストから返信されたスクリプトに、
            選択肢系のさくらスクリプトタグが含まれる場合に発生します。
            </remarks>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.OnAnchorSelect(SakuraBridge.Library.PluginRequest,System.String)">
            <summary>
            アンカーが選択された際に発生する処理
            </summary>
            <param name="req">受信したリクエスト</param>
            <param name="jumperId">選択されたジャンパのID [Reference0]</param>
            <remarks>
            プラグインがゴーストに送信したスクリプトおよび、プラグインがゴーストに通知したイベントに対してゴーストから返信されたスクリプトに、
            アンカー系のさくらスクリプトタグが含まれる場合に発生します。
            
            OnAnchorSelectExがNo Content以外を返した場合は、この処理は呼び出されません。
            </remarks>
        </member>
        <member name="M:SakuraBridge.Library.PluginModule.OnAnchorSelectEx(SakuraBridge.Library.PluginRequest,System.String,System.String,System.Collections.Generic.IList{System.String})">
             <summary>
             アンカーが選択された際に発生する処理
             </summary>
             <param name="req">受信したリクエスト</param>
             <param name="jumperText">選択されたジャンパのテキスト（ラベル） [Reference0]</param>
             <param name="jumperId">選択されたジャンパのID [Reference1]</param>
             <param name="additionalValues">拡張情報 [Reference2-]</param>
             <remarks>
             プラグインがゴーストに送信したスクリプトおよび、プラグインがゴーストに通知したイベントに対してゴーストから返信されたスクリプトに、
            アンカー系のさくらスクリプトタグが含まれる場合に発生します。
             </remarks>
        </member>
        <member name="T:SakuraBridge.Library.PluginResponse">
            <summary>
            PLUGIN/2.0 レスポンス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginResponse.Version">
            <summary>
            バージョン
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginResponse.#ctor(System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="statusCode">ステータスコード。ここで指定した値に応じて、ステータス説明文も自動設定される</param>
        </member>
        <member name="P:SakuraBridge.Library.PluginResponse.Event">
            <summary>
            Eventヘッダ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginResponse.Script">
            <summary>
            Scriptヘッダ
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginResponse.OK">
            <summary>
            新しい 200 OK レスポンスを生成します。
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginResponse.NoContent">
            <summary>
            新しい 204 No Content レスポンスを生成します。
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.PluginRequest">
            <summary>
            PLUGIN/2.0 リクエスト
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.PluginRequest.NotifyCommand">
            <summary>
            仕様で規定されたNOTIFYコマンド文字列
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.PluginRequest.GetCommand">
            <summary>
            仕様で規定されたGETコマンド文字列
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.PluginRequest.Parse(System.String)">
            <summary>
            リクエスト文字列をパースする
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginRequest.IsNotify">
            <summary>
            NOTIFYリクエストフラグ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginRequest.Command">
            <summary>
            コマンド文字列
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginRequest.ID">
            <summary>
            IDヘッダ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.PluginRequest.References">
            <summary>
            Reference0, 1, 2... のリストを取得/設定
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.Request">
            <summary>
            SHIORI/SAORI/PLUGINリクエストの基底クラス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Request.Command">
            <summary>
            コマンド文字列 (例: "GET PLUGIN/2.0") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Request.Sender">
            <summary>
            Senderヘッダ
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Request.ToString">
            <summary>
            文字列化
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.Request.Parse``1(System.String,System.String,System.Func{System.String,System.Boolean},System.Action{System.String,``0})">
            <summary>
            リクエスト文字列をパースする
            </summary>
            <param name="message">パース対象のリクエスト文字列</param>
            <param name="versionCaption">パース対象のリクエストバージョン表記。例外発生時に表示される</param>
            <param name="CommandCheckFunc">コマンド行が正しいかどうかを判定する関数</param>
            <param name="RequestSetupFunc">リクエストに必要な初期値をセットする関数。ヘッダのセット後に、コマンド行、リクエストを引数として呼ばれる</param>
        </member>
        <member name="T:SakuraBridge.Library.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.Properties.Resources.Culture">
            <summary>
              すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.SaoriModule">
            <summary>
            SAORIモジュールクラス
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.SaoriModule.DLLDirPath">
            <summary>
            DLLが置かれているディレクトリのパス。Load時にセットされる
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SaoriModule.Load(System.String)">
            <summary>
            Load処理
            </summary>
            <param name="dllDirPath">DLLが置かれているパス</param>
        </member>
        <member name="M:SakuraBridge.Library.SaoriModule.Request(System.String)">
            <summary>
            リクエスト受信時の処理
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SaoriModule.RequestMain(SakuraBridge.Library.SaoriRequest)">
            <summary>
            リクエスト受信時のメイン処理
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SaoriModule.Execute(SakuraBridge.Library.SaoriRequest)">
            <summary>
            受信したEXECUTEリクエストに応じてレスポンスを生成する
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SaoriModule.Unload">
            <summary>
            Unload処理
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.SaoriRequest">
            <summary>
            SAORI/1.0 universal リクエスト
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.SaoriRequest.GetVersionCommand">
            <summary>
            仕様で規定されたGET VERSIONコマンド文字列
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.SaoriRequest.ExecuteCommand">
            <summary>
            仕様で規定されたEXECUTEコマンド文字列
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SaoriRequest.Parse(System.String)">
            <summary>
            リクエスト文字列をパースする
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SaoriRequest.IsExecute">
            <summary>
            EXECUTEリクエストフラグ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SaoriRequest.Command">
            <summary>
            コマンド文字列
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SaoriRequest.Arguments">
            <summary>
            Argument0, 1, 2... のリストを取得/設定
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.SaoriResponse">
            <summary>
            SAORI/1.0 universal レスポンス
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SaoriResponse.Version">
            <summary>
            バージョン
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SaoriResponse.#ctor(System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="statusCode">ステータスコード。ここで指定した値に応じて、ステータス説明文も自動設定される</param>
        </member>
        <member name="P:SakuraBridge.Library.SaoriResponse.Result">
            <summary>
            Resultヘッダ
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SaoriResponse.Values">
            <summary>
            Value0, 1, 2... のリストを取得/設定
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SaoriResponse.OK">
            <summary>
            新しい 200 OK レスポンスを生成します。
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SaoriResponse.NoContent">
            <summary>
            新しい 204 No Content レスポンスを生成します。
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.SSTPRequest">
            <summary>
            SSTPリクエスト
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.NotifySSTP11Request">
            <summary>
            NOTIFY SSTP/1.1 リクエスト
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.NotifySSTP11Request.Command">
            <summary>
            コマンド文字列
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.SendSSTP14Request">
            <summary>
            SEND SSTP/1.4 リクエスト
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SendSSTP14Request.Command">
            <summary>
            コマンド文字列
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.SSTPResponse">
            <summary>
            SSTPレスポンス
            </summary>
            <remarks>SHIORI/SAORI/PLUGINのレスポンスとはフォーマットが異なるため、Responseクラスを継承していないことに注意してください。</remarks>
        </member>
        <member name="M:SakuraBridge.Library.SSTPResponse.Parse(System.String)">
            <summary>
            レスポンス文字列をパースする
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.Status">
            <summary>
            ステータス文字列 (例: "PLUGIN/2.0 200 OK") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.Version">
            <summary>
            ステータス行に出力するバージョン (例: "PLUGIN/2.0") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.StatusCode">
            <summary>
            ステータスコード (例: 200) 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.StatusExplanation">
            <summary>
            ステータス説明句 (例: "OK") 
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.AdditionalData">
            <summary>
            EXECUTE/1.3 リクエストなどで取得可能な追加情報。存在しない場合はnull
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.Success">
            <summary>
            リクエストが成功したかどうか。200番台のステータスコードの場合true
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.IsClientError">
            <summary>
            クライアントエラーかどうか。400番台のステータスコードの場合true
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPResponse.IsServerError">
            <summary>
            サーバーエラーかどうか。500番台のステータスコードの場合true
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SSTPResponse.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:SakuraBridge.Library.SSTPClient">
            <summary>
            SSTP送信クライアント
            </summary>
        </member>
        <member name="F:SakuraBridge.Library.SSTPClient.DefaultToPort">
            <summary>
            SSTPの標準ポート番号
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPClient.ToHost">
            <summary>
            送信先ホスト (初期値: 127.0.0.1)
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPClient.ToPort">
            <summary>
            送信先ポート (初期値: 9801)
            </summary>
        </member>
        <member name="P:SakuraBridge.Library.SSTPClient.DebugLogging">
            <summary>
            リクエスト、レスポンスの内容などをDebug.WriteLineで出力するかどうか
            </summary>
        </member>
        <member name="M:SakuraBridge.Library.SSTPClient.SendRequest(SakuraBridge.Library.SSTPRequest)">
            <summary>
            SSTPリクエストを送信し、レスポンスを得る
            </summary>
            <param name="req">リクエストオブジェクト</param>
            <remarks>
            khskさんの作成されたソースを参考にしています。
            https://qiita.com/khsk/items/177741a6c573790a9379
            </remarks>
            <returns>成功した場合はResponseオブジェクト、失敗した場合はnull</returns>
        </member>
    </members>
</doc>
